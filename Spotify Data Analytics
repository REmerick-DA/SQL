# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL.

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL based on what I wanted to know about it.

--Tested to ensure all columns displayed correctly
SELECT * FROM BIT_DB.Spotifydata LIMIT 5;

--What are the top 5 tracks by popularity?
SELECT popularity, track_name
FROM BIT_DB.Spotifydata
ORDER BY popularity desc LIMIT 5;

--Which artists have tracks of at least 90 in popularity?
SELECT popularity, track_name, artist_name
FROM BIT_DB.Spotifydata
WHERE popularity > 89
ORDER BY popularity desc;

--What is the average danceability by artist and track?
SELECT artist_name, track_name, sum(danceability)/count(id)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY danceability desc;

--Who are the top 10 artists based on popularity?
SELECT distinct artist_name, sum(popularity) AS popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY popularity desc LIMIT 10;

--What artist released the longest song in minutes and what's the track name?
SELECT artist_name, track_name, MAX(duration_ms/60000, 2) AS duration
FROM BIT_DB.Spotifydata
ORDER BY duration desc LIMIT 1;

